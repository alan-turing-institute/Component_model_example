package component:pkg-component;

interface types {
    // TODO: How to include this type with byte representation
    variant cell {
        dead(u8),
        alive(u8)
        
    }
}



interface universe {
    use types.{cell};
    
    resource universe-resource {
        constructor();
        tick: func();
        render: func() -> string;
        width: func() -> u32;
        height: func() -> u32;
        // TODO: is it possible to return a pointer to the cells instead?
        // cells: func() -> pointer<list<u8>>;
        cells: func() -> list<u8>;
        get-value: func(idx: u32) -> u8;
    }

}

/// An example world for the component to target.
world universe-world {
    export universe;
}